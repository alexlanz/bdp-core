pipeline {
    agent {
        dockerfile {
            filename 'docker/dockerfile-java'
            additionalBuildArgs '--build-arg JENKINS_USER_ID=`id -u jenkins` --build-arg JENKINS_GROUP_ID=`id -g jenkins`'
        }
    }

    environment {
        BDP_DATABASE_CONFIG = credentials('bdp-core-prod-persistence')
    }

    stages {
        stage('Configure') {
            steps {
                sh 'cp "${BDP_DATABASE_CONFIG}" dal/src/main/resources/META-INF/persistence.xml'

                sh 'sed -i -e "s%\\(log4j.rootLogger=\\).*\\$%\\1INFO,stdout,R%" reader/src/main/resources/log4j.properties'
                sh 'sed -i -e "s%\\(log4j.rootLogger=\\).*\\$%\\1INFO,stdout,R%" writer/src/main/resources/log4j.properties'
                sh 'sed -i -e "s%\\(log4j.rootLogger=\\).*\\$%\\1INFO,stdout,R%" dal/src/main/resources/log4j.properties'
            }
        }
        stage('Install') {
            steps {
                sh 'cd dal && mvn -B -U clean test install'
            }
        }
        stage('Build - Reader') {
            steps {
                sh 'cd reader && mvn -B -U clean test package'
            }
        }
        stage('Build - Writer') {
            steps {
                sh 'cd writer && mvn -B -U clean test package'
            }
        }
        stage('Archive') {
            steps {
                sh 'cp reader/target/reader.war reader.war'
                sh 'cp writer/target/writer.war writer.war'
                archiveArtifacts artifacts: 'reader.war', onlyIfSuccessful: true
                archiveArtifacts artifacts: 'writer.war', onlyIfSuccessful: true
            }
        }
    }
}
